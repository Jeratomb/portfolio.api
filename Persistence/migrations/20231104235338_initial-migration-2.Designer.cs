// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using portfolio.api.Persistence.Context;

#nullable disable

namespace portfolio.api.Persistence.migrations
{
    [DbContext(typeof(PortfolioDbContext))]
    [Migration("20231104235338_initial-migration-2")]
    partial class initialmigration2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("portfolio.api.Persistence.Entities.Knowledge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<Guid>("KnowledgeCategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Modified")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("scale");

                    b.HasKey("Id");

                    b.HasIndex("KnowledgeCategoryId");

                    b.ToTable("knowledges", "portfolio");

                    b.HasData(
                        new
                        {
                            Id = new Guid("072c5d14-24e9-497b-a46c-26a29d9348e8"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3329),
                            KnowledgeCategoryId = new Guid("8580b13d-3013-4ecb-937c-22c218195d9f"),
                            Modified = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3330),
                            Name = "CSS"
                        },
                        new
                        {
                            Id = new Guid("195a2c50-1490-4982-a757-3cf882c46fea"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3359),
                            KnowledgeCategoryId = new Guid("de40dd39-63b4-45c4-baef-601395f2afa8"),
                            Modified = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3359),
                            Name = "SQL"
                        },
                        new
                        {
                            Id = new Guid("da9234d6-42c5-45a0-8e69-f5efabd17d83"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3367),
                            KnowledgeCategoryId = new Guid("8580b13d-3013-4ecb-937c-22c218195d9f"),
                            Modified = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3367),
                            Name = "CSS"
                        },
                        new
                        {
                            Id = new Guid("1aed1b62-16d4-4fcb-a12d-3254e4e50da2"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3375),
                            KnowledgeCategoryId = new Guid("9674b5b1-bf64-4a7e-b886-97f4f3a882be"),
                            Modified = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3375),
                            Name = "MVC"
                        },
                        new
                        {
                            Id = new Guid("d344acbb-f0f4-4bcf-9d85-5270025bc2d4"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3383),
                            KnowledgeCategoryId = new Guid("9674b5b1-bf64-4a7e-b886-97f4f3a882be"),
                            Modified = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3383),
                            Name = "API"
                        },
                        new
                        {
                            Id = new Guid("3293507b-fe11-4326-842f-57657fd34c97"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3391),
                            KnowledgeCategoryId = new Guid("6e9e16a3-5883-455c-b489-f06e6b20cdf1"),
                            Modified = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3392),
                            Name = "C#"
                        },
                        new
                        {
                            Id = new Guid("1476fe13-37cc-41ff-be3f-c7926a041303"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3397),
                            KnowledgeCategoryId = new Guid("6e9e16a3-5883-455c-b489-f06e6b20cdf1"),
                            Modified = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3397),
                            Name = "Java"
                        },
                        new
                        {
                            Id = new Guid("8f973d13-8f90-4179-abf2-2724dc394252"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3402),
                            KnowledgeCategoryId = new Guid("6e9e16a3-5883-455c-b489-f06e6b20cdf1"),
                            Modified = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3402),
                            Name = "Python"
                        },
                        new
                        {
                            Id = new Guid("21d365f4-bbaa-41cf-8e54-5431deb9f6ba"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3406),
                            KnowledgeCategoryId = new Guid("6e9e16a3-5883-455c-b489-f06e6b20cdf1"),
                            Modified = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3407),
                            Name = "ABAP"
                        },
                        new
                        {
                            Id = new Guid("aba33b35-4760-425a-9155-ba45515308f7"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3415),
                            KnowledgeCategoryId = new Guid("6e9e16a3-5883-455c-b489-f06e6b20cdf1"),
                            Modified = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3415),
                            Name = "Javascript"
                        },
                        new
                        {
                            Id = new Guid("df4d59ef-a050-4e06-aab1-ceeb805452f3"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3422),
                            KnowledgeCategoryId = new Guid("de40dd39-63b4-45c4-baef-601395f2afa8"),
                            Modified = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3422),
                            Name = "PostgreSQL"
                        },
                        new
                        {
                            Id = new Guid("8f81787c-662c-487e-aabf-7c1d03319103"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3429),
                            KnowledgeCategoryId = new Guid("de40dd39-63b4-45c4-baef-601395f2afa8"),
                            Modified = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3429),
                            Name = "MongoDB"
                        },
                        new
                        {
                            Id = new Guid("025f38f1-36b4-4c0d-80ba-82b204fffbac"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3435),
                            KnowledgeCategoryId = new Guid("b3f7eb7a-8528-4cc0-9f65-5b8b133d5ca0"),
                            Modified = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3436),
                            Name = "Docker"
                        },
                        new
                        {
                            Id = new Guid("2c983279-ddab-46c1-9a40-6779c73e6eaa"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3441),
                            KnowledgeCategoryId = new Guid("b3f7eb7a-8528-4cc0-9f65-5b8b133d5ca0"),
                            Modified = new DateTime(2023, 11, 4, 23, 53, 38, 315, DateTimeKind.Utc).AddTicks(3441),
                            Name = "Helm"
                        });
                });

            modelBuilder.Entity("portfolio.api.Persistence.Entities.KnowledgeCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<DateTime?>("Modified")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("knowledgecategories", "portfolio");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7c723b03-565e-4596-ba65-d67ebada473f"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 314, DateTimeKind.Utc).AddTicks(1543),
                            Modified = new DateTime(2023, 11, 4, 23, 53, 38, 314, DateTimeKind.Utc).AddTicks(1548),
                            Name = "DotNetCore"
                        },
                        new
                        {
                            Id = new Guid("8580b13d-3013-4ecb-937c-22c218195d9f"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 314, DateTimeKind.Utc).AddTicks(2056),
                            Modified = new DateTime(2023, 11, 4, 23, 53, 38, 314, DateTimeKind.Utc).AddTicks(2058),
                            Name = "Frontend"
                        },
                        new
                        {
                            Id = new Guid("9674b5b1-bf64-4a7e-b886-97f4f3a882be"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 314, DateTimeKind.Utc).AddTicks(2094),
                            Modified = new DateTime(2023, 11, 4, 23, 53, 38, 314, DateTimeKind.Utc).AddTicks(2094),
                            Name = "Backend"
                        },
                        new
                        {
                            Id = new Guid("b3f7eb7a-8528-4cc0-9f65-5b8b133d5ca0"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 314, DateTimeKind.Utc).AddTicks(2107),
                            Modified = new DateTime(2023, 11, 4, 23, 53, 38, 314, DateTimeKind.Utc).AddTicks(2108),
                            Name = "DevOps"
                        },
                        new
                        {
                            Id = new Guid("de40dd39-63b4-45c4-baef-601395f2afa8"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 314, DateTimeKind.Utc).AddTicks(2119),
                            Modified = new DateTime(2023, 11, 4, 23, 53, 38, 314, DateTimeKind.Utc).AddTicks(2119),
                            Name = "DataBases"
                        },
                        new
                        {
                            Id = new Guid("6e9e16a3-5883-455c-b489-f06e6b20cdf1"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 314, DateTimeKind.Utc).AddTicks(2139),
                            Modified = new DateTime(2023, 11, 4, 23, 53, 38, 314, DateTimeKind.Utc).AddTicks(2140),
                            Name = "Languages"
                        });
                });

            modelBuilder.Entity("portfolio.api.Persistence.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<Guid>("KnowledgeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Modified")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("KnowledgeId");

                    b.HasIndex("Name", "KnowledgeId")
                        .IsUnique();

                    b.ToTable("projects", "portfolio");

                    b.HasData(
                        new
                        {
                            Id = new Guid("072c5d14-24e9-497b-a46c-26a29d9348e8"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 316, DateTimeKind.Utc).AddTicks(864),
                            Description = "Test Project with css and html",
                            KnowledgeId = new Guid("072c5d14-24e9-497b-a46c-26a29d9348e8"),
                            Name = "Project 1"
                        },
                        new
                        {
                            Id = new Guid("195a2c50-1490-4982-a757-3cf882c46fea"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 316, DateTimeKind.Utc).AddTicks(896),
                            Description = "Test Project 2 description 2",
                            KnowledgeId = new Guid("072c5d14-24e9-497b-a46c-26a29d9348e8"),
                            Name = "Project 2"
                        },
                        new
                        {
                            Id = new Guid("da9234d6-42c5-45a0-8e69-f5efabd17d83"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 316, DateTimeKind.Utc).AddTicks(902),
                            Description = "Test Project 3 with mvc description 3",
                            KnowledgeId = new Guid("1aed1b62-16d4-4fcb-a12d-3254e4e50da2"),
                            Name = "Project 3"
                        },
                        new
                        {
                            Id = new Guid("1aed1b62-16d4-4fcb-a12d-3254e4e50da2"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 316, DateTimeKind.Utc).AddTicks(908),
                            Description = "Test Project 4 docker description 4",
                            KnowledgeId = new Guid("025f38f1-36b4-4c0d-80ba-82b204fffbac"),
                            Name = "Project 4"
                        },
                        new
                        {
                            Id = new Guid("d344acbb-f0f4-4bcf-9d85-5270025bc2d4"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 316, DateTimeKind.Utc).AddTicks(915),
                            Description = "Test Project 5 helm description 5",
                            KnowledgeId = new Guid("2c983279-ddab-46c1-9a40-6779c73e6eaa"),
                            Name = "Project 5"
                        },
                        new
                        {
                            Id = new Guid("55931d72-9376-4dfd-8232-6a21d31148f4"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 316, DateTimeKind.Utc).AddTicks(924),
                            Description = "Test Project 5 helm description 5",
                            KnowledgeId = new Guid("025f38f1-36b4-4c0d-80ba-82b204fffbac"),
                            Name = "Project 5"
                        },
                        new
                        {
                            Id = new Guid("75dcaf24-eb4e-4b8c-a4f1-f179ff1c780d"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 316, DateTimeKind.Utc).AddTicks(929),
                            Description = "Test Project 5 helm description 5",
                            KnowledgeId = new Guid("1aed1b62-16d4-4fcb-a12d-3254e4e50da2"),
                            Name = "Project 5"
                        },
                        new
                        {
                            Id = new Guid("eb9836d2-752a-4cf1-b348-1fc1a8291bc8"),
                            Created = new DateTime(2023, 11, 4, 23, 53, 38, 316, DateTimeKind.Utc).AddTicks(935),
                            Description = "Test Project 5 helm description 5",
                            KnowledgeId = new Guid("072c5d14-24e9-497b-a46c-26a29d9348e8"),
                            Name = "Project 5"
                        });
                });

            modelBuilder.Entity("portfolio.api.Persistence.Entities.Knowledge", b =>
                {
                    b.HasOne("portfolio.api.Persistence.Entities.KnowledgeCategory", "KnowledgeCategory")
                        .WithMany("Knowledges")
                        .HasForeignKey("KnowledgeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KnowledgeCategory");
                });

            modelBuilder.Entity("portfolio.api.Persistence.Entities.Project", b =>
                {
                    b.HasOne("portfolio.api.Persistence.Entities.Knowledge", "Knowledge")
                        .WithMany("Projects")
                        .HasForeignKey("KnowledgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Knowledge");
                });

            modelBuilder.Entity("portfolio.api.Persistence.Entities.Knowledge", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("portfolio.api.Persistence.Entities.KnowledgeCategory", b =>
                {
                    b.Navigation("Knowledges");
                });
#pragma warning restore 612, 618
        }
    }
}
